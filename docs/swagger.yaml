definitions:
  models.AddSongRequest:
    properties:
      group:
        description: Название группы
        type: string
      link:
        description: ссылка на песню
        type: string
      release_date:
        description: Дата релиза
        type: string
      song:
        description: Название песни
        type: string
      text:
        description: Текст песни
        type: string
    type: object
  models.DefaultResponse:
    properties:
      message:
        description: Сообщение о результате операции
        type: string
      status:
        description: HTTP-статус операции
        type: integer
    type: object
  models.Song:
    properties:
      created_at:
        type: string
      group_name:
        type: string
      id:
        description: UUID
        type: string
      link:
        type: string
      release_date:
        type: string
      song_name:
        type: string
      text:
        type: string
    type: object
  models.SongDetail:
    properties:
      link:
        description: Ссылка на песню (например, на YouTube)
        type: string
      release_date:
        description: Дата релиза
        type: string
      text:
        description: Текст песни
        type: string
    type: object
  models.SongTextResponse:
    properties:
      group:
        description: Название группы
        type: string
      limit:
        description: Количество куплетов на страницу
        type: integer
      offset:
        description: Смещение
        type: integer
      song_name:
        description: Название песни
        type: string
      total:
        description: Общее количество куплетов
        type: integer
      verses:
        description: Список куплетов
        items:
          type: string
        type: array
    type: object
  models.UpdateSongRequest:
    properties:
      new_group:
        description: Новое название группы
        type: string
      new_link:
        description: ссылка на песню
        type: string
      new_release_date:
        description: Дата релиза
        type: string
      new_song_name:
        description: Новое название песни
        type: string
      new_text:
        description: Новый текст песни
        type: string
      old_group:
        description: Старое название группы
        type: string
      old_song_name:
        description: Название песни, которую нужно обновить
        type: string
    type: object
info:
  contact: {}
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Возвращает список песен с возможностью фильтрации по группе, названию,
        тексту и дате релиза(вернёт все песни, которые вышли в релиз раньше), а также
        с пагинацией
      parameters:
      - description: Название группы
        example: '"Muse"'
        in: query
        name: group
        type: string
      - description: Название песни
        example: '"Hysteria"'
        in: query
        name: song
        type: string
      - description: Текст песни
        example: '"It''s bugging me, grating me"'
        in: query
        name: text
        type: string
      - description: Дата релиза
        example: '"2003-12-15"'
        in: query
        name: release_date
        type: string
      - default: 10
        description: Лимит песен на страницу
        example: 5
        in: query
        name: limit
        type: integer
      - default: 0
        description: Смещение для пагинации
        example: 10
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список песен
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/models.DefaultResponse'
      summary: Получение песен с фильтрацией и пагинацией
      tags:
      - Песни
  /songs/add:
    post:
      consumes:
      - application/json
      description: Добавление новой песни в музыкальную библиотеку
      parameters:
      - description: Детали новой песни
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.AddSongRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Песня успешно добавлена
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/models.DefaultResponse'
      summary: Добавление новой песни
      tags:
      - Песни
  /songs/delete:
    delete:
      consumes:
      - application/json
      description: Удаление песни из музыкальной библиотеки по названию и имени группы
      parameters:
      - description: Название песни
        example: '"Supermassive Black Hole"'
        in: query
        name: song_name
        required: true
        type: string
      - description: Название группы
        example: '"Muse"'
        in: query
        name: group
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Песня успешно удалена
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "404":
          description: Песня не найдена
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/models.DefaultResponse'
      summary: Удаление песни
      tags:
      - Песни
  /songs/info:
    get:
      consumes:
      - application/json
      description: Возвращает информацию о песне, включая дату релиза, текст и ссылку
      parameters:
      - description: Название группы
        example: '"Imagine Dragons"'
        in: query
        name: group
        required: true
        type: string
      - description: Название песни
        example: '"Radioactive"'
        in: query
        name: song_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Детали песни
          schema:
            $ref: '#/definitions/models.SongDetail'
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/models.DefaultResponse'
      summary: Получение информации о песне
      tags:
      - Песни
  /songs/text:
    get:
      consumes:
      - application/json
      description: Возвращает текст песни с разбивкой на куплеты и поддержкой пагинации
      parameters:
      - description: Название песни
        example: '"Bohemian Rhapsody"'
        in: query
        name: song_name
        required: true
        type: string
      - description: Название группы
        example: '"Queen"'
        in: query
        name: group
        required: true
        type: string
      - default: 3
        description: Лимит куплетов на страницу
        example: 2
        in: query
        name: limit
        type: integer
      - default: 0
        description: Смещение для пагинации
        example: 1
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Текст песни с пагинацией
          schema:
            $ref: '#/definitions/models.SongTextResponse'
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "404":
          description: Песня не найдена
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/models.DefaultResponse'
      summary: Получение текста песни с пагинацией
      tags:
      - Песни
  /songs/update:
    put:
      consumes:
      - application/json
      description: Обновление информации о песне, включая название, группу и текст
      parameters:
      - description: Обновленные данные песни
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateSongRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Песня успешно обновлена
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "404":
          description: Песня не найдена
          schema:
            $ref: '#/definitions/models.DefaultResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/models.DefaultResponse'
      summary: Обновление данных песни
      tags:
      - Песни
swagger: "2.0"
